@using Microsoft.AspNetCore.Components.Web
@namespace RegularCardGame.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="RegularCardGame.styles.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()
    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script>
        const root=document.documentElement;
        let vh=window.innerHeight*0.01;
        let vw=window.innerWidth*0.01;
        let volume=0.5;

        function setVolume() {
            let musicAudio=document.getElementById("musicAudio");
            let volumeSlider=document.getElementById("volumeSlider");
            if(musicAudio!=null)musicAudio.volume=volume;
            if(volumeSlider!=null){
                volumeSlider.addEventListener('mousemove',() => {
                    musicAudio.volume=volumeSlider.value/100;
                    volume=volumeSlider.value/100;
                })
            }
        }

        if(vw/vh<1366/635){
            vh=vw*635/1366;
        }
        else{
            vw=vh*1366/635;
        }
        document.documentElement.style.setProperty('--vh', `${vh}px`);
        document.documentElement.style.setProperty('--vw', `${vw}px`);

        window.addEventListener('resize', () => {
            vh=window.innerHeight*0.01;
            vw=window.innerWidth*0.01;
            if(vw/vh<1366/635){
                vh=vw*635/1366;
            }
            else{
                vw=vh*1366/635;
            }
            document.documentElement.style.setProperty('--vh', `${vh}px`);
            document.documentElement.style.setProperty('--vw', `${vw}px`);
        })

        document.addEventListener('mousemove',e => {
            setVolume();
            let x=e.clientX/vw/100;
            let y=e.clientY/vh/100;
            let attackArrow=document.getElementById("attackArrow");
            let attacker=document.getElementById("attacker");
            if(attacker!=null){
                var rect=attacker.getBoundingClientRect();
                if(attackArrow!=null){
                    attackArrow.style.display="block";
                    attackArrow.innerHTML=`<line x1='${(rect.left+rect.right)/2}px' x2='${x*100}%' y1='${(rect.top+rect.bottom)/2}px' y2='${y*100}%' style='stroke: red;stroke-width: 0.6vh;stroke-linecap: round;stroke-dasharray: 1.5vh;'/>`;
                }
            }
            else{
                if(attackArrow!=null)attackArrow.style.display="none";
            }
        })
        document.addEventListener('mouseup',e => {
            setVolume();
            let attackArrow=document.getElementById("attackArrow");
            let attacker=document.getElementById("attacker");
            if(attacker==null){
                if(attackArrow!=null)attackArrow.style.display="none";
            }
        })
        document.addEventListener('mousedown',e => {
            setVolume();
            let attackArrow=document.getElementById("attackArrow");
            let attacker=document.getElementById("attacker");
            if(attacker==null){
                if(attackArrow!=null)attackArrow.style.display="none";
            }
        })
    </script>
</body>
</html>